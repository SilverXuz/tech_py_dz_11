"""
üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞.
üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è.
üìå –ü—Ä–∏ —ç—Ç–æ–º –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
üìå –°–∫–ª–∞–¥—ã–≤–∞–µ–º –∏ –≤—ã—á–∏—Ç–∞–µ–º –ø–µ—Ä–∏–º–µ—Ç—Ä—ã, –∞ –Ω–µ –¥–ª–∏–Ω–Ω—É –∏ —à–∏—Ä–∏–Ω—É.
üìå –ü—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.
"""

"""
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
–î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –ø—Ä–æ—à–ª—É—é –∑–∞–¥–∞—á—É.
–î–æ–±–∞–≤—å—Ç–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø–ª–æ—â–∞–¥–∏
–î–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤—Å–µ —à–µ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
"""

"""
–î–æ–±–∞–≤—å—Ç–µ –∫–æ –≤—Å–µ–º –∑–∞–¥–∞—á–∞–º —Å —Å–µ–º–∏–Ω–∞—Ä–∞ —Å—Ç—Ä–æ–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –º–µ—Ç–æ–¥—ã –≤—ã–≤–æ–¥–∞ 
–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ –ø–µ—á–∞—Ç—å.
"""

class Rectangle:
    """–ö–ª–∞—Å—Å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞."""

    def __init__(self, height: int, width=None):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞."""
        self.height = height
        if width:
            self.width = width
        else:
            self.width = height

    def get_perimeter(self):
        """–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø–µ—Ä–∏–º–µ—Ç—Ä–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞."""
        return 2 * (self.height + self.width)

    def get_area(self):
        """–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞."""
        return self.width * self.height

    def __add__(self, other):
        """–°–ª–æ–∂–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø–µ—Ä–∏–º–µ—Ç—Ä—É."""
        perimetr = self.get_perimeter() + other.get_perimeter()
        side_a = perimetr // 6
        side_b = (perimetr - side_a * 2) // 2
        return Rectangle(side_a, side_b)

    def __sub__(self, other):
        """–í—ã—á–∏—Ç–∞–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø–µ—Ä–∏–º–µ—Ç—Ä—É."""
        perimetr = abs(self.get_perimeter() - other.get_perimeter())
        side_a = perimetr // 6
        side_b = (perimetr - side_a * 2) // 2
        return Rectangle(side_a, side_b)

    def __eq__(self, other):
        """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –ø–ª–æ—â–∞–¥–∏."""
        return self.get_area() == other.get_area()

    def __ne__(self, other):
        """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –Ω–∞ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –ø–ª–æ—â–∞–¥–∏."""
        return self.get_area() != other.get_area()

    def __lt__(self, other):
        """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø–ª–æ—â–∞–¥–∏ (–º–µ–Ω—å—à–µ)."""
        return self.get_area() < other.get_area()

    def __le__(self, other):
        """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø–ª–æ—â–∞–¥–∏ (–º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ)."""
        return self.get_area() <= other.get_area()

    def __gt__(self, other):
        """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø–ª–æ—â–∞–¥–∏ (–±–æ–ª—å—à–µ)."""
        return self.get_area() > other.get_area()

    def __ge__(self, other):
        """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –ø–æ –ø–ª–æ—â–∞–¥–∏ (–±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ)."""
        return self.get_area() >= other.get_area()

    def __str__(self):
        """–°—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞."""
        return f'Rectangle(height={self.height}, width={self.width})'

    def __repr__(self):
        """–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏."""
        return self.__str__()

spam = Rectangle(1, 9)
eggs = Rectangle(7)

add_reg = spam + eggs
sub_reg = spam - eggs

print(f'{sub_reg.width = }, {sub_reg.height =}')
print(f'{add_reg.width = }, {add_reg.height =}')
print()
print(spam)
print(eggs)
print()
print(repr(spam))
print(repr(eggs))
